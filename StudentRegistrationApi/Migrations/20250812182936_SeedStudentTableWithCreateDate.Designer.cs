// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentRegistrationApi.Data;

#nullable disable

namespace StudentRegistrationApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250812182936_SeedStudentTableWithCreateDate")]
    partial class SeedStudentTableWithCreateDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentRegistrationApi.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TelephoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, Springfield",
                            CreatedDate = new DateTime(2025, 8, 12, 23, 59, 36, 650, DateTimeKind.Local).AddTicks(9142),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jhondoe@gmail.com",
                            FullName = "John Doe",
                            Gender = "Male",
                            TelephoneNumber = 1234567890
                        },
                        new
                        {
                            Id = 2,
                            Address = "415 Main St, Springfield",
                            CreatedDate = new DateTime(2025, 8, 12, 23, 59, 36, 650, DateTimeKind.Local).AddTicks(9157),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "e@gmail.com",
                            FullName = "ana maria",
                            Gender = "Male",
                            TelephoneNumber = 765678989
                        },
                        new
                        {
                            Id = 3,
                            Address = "415 miami,california",
                            CreatedDate = new DateTime(2025, 8, 12, 23, 59, 36, 650, DateTimeKind.Local).AddTicks(9158),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "l@gmail.com",
                            FullName = "logan",
                            Gender = "Female",
                            TelephoneNumber = 765678789
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
